<!DOCTYPE HTML>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>Products</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="shortcut icon" type="image/x-icon" href="/user-assets/images/icons/FAVICON SW.png">
    <link href="admin-assets/css/main.css" rel="stylesheet" type="text/css" />
</head>

<style>
    .status {
       font-weight: bold;
   }
   .status.active {
       color: green;
   }
   .status.inactive {
       color: red;
   }
   .btn-active {
       background-color: green;
       border-color: green;
       color: white;
   }
   .btn-inactive {
       background-color: red;
       border-color: red;
       color: white;
   }

   .styled-table {
       border-collapse: collapse;
       width: 100%;
   }

   .styled-table th, .styled-table td {
       border: 1px solid rgb(234, 234, 234);
       padding: 8px;
       text-align: center;
   }

   .styled-table th {
       background-color: #ffffff;
   }
   .pagination {
  display: flex;
  justify-content: center;
  list-style-type: none;
}

.pagination li {
  margin: 0 5px;
}

.pagination .page-link {
  padding: 8px 12px;
  color: #3f3f3f;
  text-decoration: none;
  border: 1px solid #ddd;
  border-radius: 5px;
}

.pagination .page-link:hover {
  background-color: #f2f2f2;
}

.pagination .active .page-link {
  background-color: #000000;
  color: white;
}

.block-unblock {
  cursor: pointer;
  transition: all 0.3s ease;
}

.block-unblock:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}
</style>

<body>
    <div class="screen-overlay"></div>
    <%- include('./partials/adminAside.ejs') %>
    <main class="main-wrap">
        <%- include('./partials/adminNav.ejs') %>
 
        <section class="content-main">
            <div class="content-header">
                <div>
                    <h2 class="content-title card-title">Products</h2>
                    <p></p>
                </div>
                <div>
                    <a href="/admin/productAdd" class="btn btn-primary btn-sm rounded">Create new Product</a>
                </div>
            </div>

            <div class="row">
                <% if (locals.products) { %>
                    <% for (let i = 0; i < products.length; i++) { %>
                        <div class="col-xl-3 col-lg-4 col-md-6">
                            <div class="card card-product-grid" data-product-id="<%= products[i]._id %>">
                                <a href="#" class="img-wrap">
                                    <img src="../<%= products[i].images[0] %>" alt="Product">
                                </a>
                                <div class="info-wrap">
                                    <div class="btn-group-vertical float-end" role="group">
                                        <a href="/admin/editProducts?id=<%= products[i]._id %>" class="btn btn-sm btn-brand rounded mb-2">
                                            <i class="material-icons md-edit mr-5"></i>Edit
                                        </a>
                                        <!-- Block/Unblock Buttons -->
                                        <button class="btn btn-sm rounded mb-2 block-unblock-btn <%= products[i].is_active ? 'btn-warning' : 'btn-success' %>" 
                                               data-product-id="<%= products[i]._id %>"
                                               data-is-active="<%= products[i].is_active %>">
                                            <% if (products[i].is_active) { %>
                                                <i class="material-icons mr-5"></i>Block
                                            <% } else { %>
                                                <i class="material-icons mr-5"></i>Unblock
                                            <% } %>
                                        </button>
                                    </div>
            
                                    <!-- Product Title -->
                                    <a href="#" class="title"><%= products[i].productName %></a>
                                    
                                    <!-- Offer/Real Price Display Logic -->
                                    <% if (products[i].offerId && products[i].offerId.offerPercentage > 0) { %>
                                        <div class="price mt-1">
                                            Offer Price: ₹<%= products[i].offerPrice %>
                                        </div>
                                        <span>₹<del><%= products[i].realPrice %></del></span>
                                    <% } else { %>
                                        <div class="price mt-1">
                                            Price: ₹<%= products[i].realPrice %>
                                        </div>
                                    <% } %>
            
                                    <!-- Category Display -->
                                    <% if (products[i].categoryId) { %>
                                        <div class="price mt-1">Category: <%= products[i].categoryId.categoryName %></div>
                                    <% } else { %>
                                        <div class="price mt-1">Category: N/A</div>
                                    <% } %>
            
                                    <!-- Offer Display -->
                                    <% if (products[i].offerId && products[i].offerId.offerPercentage > 0) { %>
                                        <div class="status mt-1 active">Offer: <%= products[i].offerId.offerPercentage %>%</div>
                                    <% } else { %>
                                        <div class="price mt-1">Offer: No Offer</div>
                                    <% } %>
            
                                    <!-- Created On Date -->
                                    <div class="price mt-1">Created On: <%= new Date(products[i].date).toLocaleDateString() %></div>
            
                                    <!-- Product Status -->
                                    <% if (products[i].is_active) { %>
                                        <div class="status mt-1 active product-status" id="product-status-<%= products[i]._id %>">Status: Active</div>
                                    <% } else { %>
                                        <div class="status mt-1 inactive product-status" id="product-status-<%= products[i]._id %>">Status: Inactive</div>
                                    <% } %>
            
                                    <!-- Sizes and Stock Display -->
                                    <div>
                                        <table class="styled-table">
                                            <tr>
                                                <th>Sizes</th>
                                                <% for (let j = 0; j < products[i].sizes.length; j++) { %>
                                                    <td><%= products[i].sizes[j].size %></td>
                                                <% } %>
                                            </tr>
                                            <tr>
                                                <th>Stock</th>
                                                <% for (let j = 0; j < products[i].sizes.length; j++) { %>
                                                    <td><%= products[i].sizes[j].quantity %></td>
                                                <% } %>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                    <% } %>
                <% } %>
            </div>
            
            <div class="pagination-controls">
                <ul class="pagination">
                  <% if (currentPage > 1) { %>
                    <li class="page-item">
                      <a class="page-link" href="?page=<%= currentPage - 1 %>">Previous</a>
                    </li>
                  <% } %>
              
                  <% for (let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                      <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                    </li>
                  <% } %>
              
                  <% if (currentPage < totalPages) { %>
                    <li class="page-item">
                      <a class="page-link" href="?page=<%= currentPage + 1 %>">Next</a>
                    </li>
                  <% } %>
                </ul>
            </div>
           
        </section>
      
    </main>

    <style>
        .btn-group .btn {
    margin-right: 5px;
}

.btn-group .btn:last-child {
    margin-right: 0;
}
    </style>

    <script src="admin-assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="admin-assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="admin-assets/js/vendors/select2.min.js"></script>
    <script src="admin-assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="admin-assets/js/vendors/jquery.fullscreen.min.js"></script>
    <script src="admin-assets/js/main.js" type="text/javascript"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // Block/Unblock Product Handler
        document.addEventListener('DOMContentLoaded', function() {
            const blockUnblockBtns = document.querySelectorAll('.block-unblock-btn');

            blockUnblockBtns.forEach(btn => {
                btn.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    const productId = this.getAttribute('data-product-id');
                    const isActive = this.getAttribute('data-is-active') === 'true';
                    const btn = this;

                    // Disable button during request
                    btn.disabled = true;

                    const endpoint = isActive 
                        ? `/admin/productBlock?id=${productId}`
                        : `/admin/productUnblock?id=${productId}`;

                    const action = isActive ? 'Block' : 'Unblock';

                    fetch(endpoint, {
                        method: 'GET',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-Requested-With': 'XMLHttpRequest'
                        }
                    })
                    .then(response => {
                        if (response.ok) {
                            // Toggle the state
                            const newState = !isActive;
                            btn.setAttribute('data-is-active', newState);
                            
                            // Update button text and class
                            if (newState) {
                                btn.textContent = 'Block';
                                btn.classList.remove('btn-success');
                                btn.classList.add('btn-warning');
                            } else {
                                btn.textContent = 'Unblock';
                                btn.classList.remove('btn-warning');
                                btn.classList.add('btn-success');
                            }

                            // Update status badge
                            const statusElement = document.getElementById(`product-status-${productId}`);
                            if (statusElement) {
                                if (newState) {
                                    statusElement.textContent = 'Status: Active';
                                    statusElement.classList.remove('inactive');
                                    statusElement.classList.add('active');
                                } else {
                                    statusElement.textContent = 'Status: Inactive';
                                    statusElement.classList.remove('active');
                                    statusElement.classList.add('inactive');
                                }
                            }

                            // Show success message
                            Swal.fire({
                                icon: 'success',
                                title: 'Success!',
                                text: `Product ${action.toLowerCase()}ed successfully`,
                                timer: 1500,
                                showConfirmButton: false,
                            });

                            // Re-enable button
                            btn.disabled = false;
                        } else {
                            throw new Error('Request failed');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: `Failed to ${action.toLowerCase()} product. Please try again.`,
                        });

                        // Re-enable button
                        btn.disabled = false;
                    });
                });
            });
        });

        // Delete Product Handler (existing code)
        async function deleteProduct(productId) {
            try {
                const result = await Swal.fire({
                    title: 'Are you sure?',
                    text: "You won't be able to revert this!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Yes, delete it!'
                });

                if (result.isConfirmed) {
                    const response = await fetch(`/admin/deleteProduct/${productId}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    if (response.ok) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Deleted!',
                            text: 'Product has been deleted.',
                            timer: 2000,
                            showConfirmButton: false,
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        const errorData = await response.json();
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: `Failed to delete product: ${errorData.message}`,
                        });
                    }
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'An error occurred while deleting the product.',
                });
            }
        }
    </script>
</body>

</html>