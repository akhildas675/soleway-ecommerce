<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <title>Category</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="shortcut icon" type="image/x-icon" href="/user-assets/images/icons/FAVICON SW.png" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.12.0/toastify.min.css">
    <style>
      .btnBlock {
        color: #fff !important;
        background-color: #ff7700 !important;
        border-color: #ff7700 !important;
        padding: 5px 12px;
        border-radius: 5px;
        transition: all 0.3s ease;
      }

      .btnBlock:hover {
        background-color: #e56a00 !important;
      }

      .btnUnblock {
        color: #fff !important;
        background-color: #28a745 !important;
        border-color: #28a745 !important;
        padding: 5px 12px;
        border-radius: 5px;
        transition: all 0.3s ease;
      }

      .btnUnblock:hover {
        background-color: #218838 !important;
      }
    </style>
    <link href="admin-assets/css/main.css" rel="stylesheet" type="text/css" />
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastify-js/1.12.0/toastify.min.js"></script>
  </head>

  <body>
    <div class="screen-overlay"></div>
    <%- include('./partials/adminAside.ejs') %>
    <main class="main-wrap">
      <%- include('./partials/adminNav.ejs') %>
      <section class="content-main">
        <div class="content-header">
          <div>
            <h2 class="content-title card-title">Categories</h2>
            <p>Add, edit or delete a category</p>
          </div>
        </div>

        <div class="card">
          <div class="card-body">
            <div class="row">
              <div class="col-md-3">
                <!-- Category Form -->
                <form id="categoryForm">
                  <input type="hidden" id="category-id" value="">
                  <div class="container">
                    <div class="mb-4">
                      <label for="category_name" class="form-label">Name</label>
                      <input
                        type="text"
                        placeholder="Type the category name"
                        name="categoryName"
                        class="form-control"
                        id="category_name"
                        maxlength="30"
                        required
                      />
                      <div id="categoryNameError" style="color: red;"></div>
                    </div>

                    <div class="mb-4">
                      <label class="form-label">Description</label>
                      <textarea
                        placeholder="Type the Description"
                        name="description"
                        class="form-control"
                        id="description"
                        maxlength="150"
                        required
                      ></textarea>
                      <div id="descriptionError" style="color: red;"></div>
                    </div>
                  </div>
                  <div class="d-grid gap-2">
                    <button type="submit" class="btn btn-primary" id="submitBtn">Create category</button>
                    <button type="button" class="btn btn-secondary" id="cancelBtn" style="display: none;">Cancel</button>
                  </div>
                </form>
              </div>

              <div class="col-md-9">
                <div class="table-responsive">
                  <% if (locals.category) { %>
                    <table class="table table-hover">
                      <thead>
                        <tr>
                          <th class="text-center"><h6>No.</h6></th>
                          <th>Name</th>
                          <th>Description</th>
                          <th>Status</th>
                          <th class="text-end">Action</th>
                        </tr>
                      </thead>
                      <tbody id="categoryTableBody">
                        <% category.forEach((cat, index) => { %>
                          <tr data-id="<%= cat._id %>" 
                              data-name="<%= cat.categoryName %>"
                              data-desc="<%= cat.description %>">
                            <td><%= index + 1 %></td>
                            <td class="cat-name"><%= cat.categoryName %></td>
                            <td class="cat-desc"><%= cat.description.substring(0, 40) %></td>
                            <td>
                              <span class="badge rounded-pill cat-status <%= cat.is_active ? 'alert-success' : 'alert-danger' %>">
                                <%= cat.is_active ? "Active" : "Inactive" %>
                              </span>
                            </td>
                            
                            <td class="text-end">
                              <button type="button" class="btn btn-sm btn-info editBtn">Edit</button>
                              <button type="button"
                                class="btn btn-sm toggleBtn <%= cat.is_active ? 'btnBlock' : 'btnUnblock' %>"
                                data-active="<%= cat.is_active %>"
                              >
                                <%= cat.is_active ? "Block" : "Unblock" %>
                              </button>
                              <button type="button" class="btn btn-sm btn-danger deleteBtn">Delete</button>
                            </td>
                          </tr>
                        <% }) %>
                      </tbody>
                    </table>
                  <% } %>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>
    </main>

    <script src="admin-assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="admin-assets/js/vendors/bootstrap.bundle.min.js"></script>
    <script src="admin-assets/js/vendors/select2.min.js"></script>
    <script src="admin-assets/js/vendors/perfect-scrollbar.js"></script>
    <script src="admin-assets/js/vendors/jquery.fullscreen.min.js"></script>
    <script src="admin-assets/js/main.js" type="text/javascript"></script>

    <script>
      let editingCategoryId = null;

      function resetForm() {
        document.getElementById('category-id').value = '';
        document.getElementById("categoryForm").reset();
        document.getElementById('submitBtn').textContent = 'Create category';
        document.getElementById('cancelBtn').style.display = 'none';
        document.getElementById('categoryNameError').textContent = '';
        document.getElementById('descriptionError').textContent = '';
        editingCategoryId = null;
      }

      document.addEventListener("DOMContentLoaded", () => {
        // FORM SUBMISSION (CREATE OR UPDATE)
        document.getElementById("categoryForm").addEventListener("submit", async (e) => {
          e.preventDefault();
          const form = e.target;
          const categoryId = document.getElementById('category-id').value;
          const data = {
            categoryName: form.categoryName.value.trim(),
            description: form.description.value.trim(),
          };

          try {
            let endpoint, method;
            
            if (categoryId) {
              // Update mode
              endpoint = `/admin/category/${categoryId}`;
              method = "PUT";
            } else {
              // Add mode
              endpoint = "/admin/category";
              method = "POST";
            }

            const res = await fetch(endpoint, {
              method: method,
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify(data),
            });

            const result = await res.json();

            if (result.success) {
              if (categoryId) {
                // Update existing row
                const tr = document.querySelector(`tr[data-id="${categoryId}"]`);
                tr.querySelector(".cat-name").textContent = result.category.categoryName;
                tr.querySelector(".cat-desc").textContent = result.category.description.substring(0, 40);
                tr.setAttribute('data-name', result.category.categoryName);
                tr.setAttribute('data-desc', result.category.description);
                
                Toastify({
                  text: "Category updated successfully!",
                  duration: 2000,
                  gravity: "top",
                  position: "right",
                  backgroundColor: "#4CAF50",
                }).showToast();
              } else {
                // Add new row
                const tbody = document.getElementById("categoryTableBody");
                const row = document.createElement("tr");
                row.dataset.id = result.category._id;
                row.dataset.name = result.category.categoryName;
                row.dataset.desc = result.category.description;
                row.innerHTML = `
                  <td>New</td>
                  <td class="cat-name">${result.category.categoryName}</td>
                  <td class="cat-desc">${result.category.description.substring(0, 40)}</td>
                  <td class="cat-status">${result.category.is_active ? "Active" : "Inactive"}</td>
                  <td class="text-end">
                    <button type="button" class="btn btn-sm btn-info editBtn">Edit</button>
                    <button type="button" class="btn btn-sm toggleBtn ${result.category.is_active ? 'btnBlock' : 'btnUnblock'}" data-active="${result.category.is_active}">
                      ${result.category.is_active ? "Block" : "Unblock"}
                    </button>
                    <button type="button" class="btn btn-sm btn-danger deleteBtn">Delete</button>
                  </td>`;
                tbody.prepend(row);
                
                Toastify({
                  text: "Category added successfully!",
                  duration: 2000,
                  gravity: "top",
                  position: "right",
                  backgroundColor: "#4CAF50",
                }).showToast();
              }
              resetForm();
            } else {
              Toastify({
                text: result.message || "Error occurred",
                duration: 2000,
                gravity: "top",
                position: "right",
                backgroundColor: "#f44336",
              }).showToast();
            }
          } catch (error) {
            console.error("Error:", error);
            Swal.fire("Error", "Something went wrong", "error");
          }
        });

        // Cancel button
        document.getElementById('cancelBtn').addEventListener('click', resetForm);

        // TABLE EVENT HANDLER (EDIT / DELETE / TOGGLE)
        document.getElementById("categoryTableBody").addEventListener("click", async (e) => {
          const tr = e.target.closest("tr");
          const id = tr.dataset.id;

          // DELETE CATEGORY
          if (e.target.classList.contains("deleteBtn")) {
            const { isConfirmed } = await Swal.fire({
              title: "Are you sure?",
              text: "You won't be able to revert this!",
              icon: "warning",
              showCancelButton: true,
              confirmButtonColor: "#d33",
              cancelButtonColor: "#3085d6",
              confirmButtonText: "Yes, delete it!"
            });

            if (isConfirmed) {
              const res = await fetch(`/admin/category/${id}`, { method: "DELETE" });
              const result = await res.json();
              if (result.success) {
                tr.remove();
                if (document.getElementById('category-id').value === id) {
                  resetForm();
                }
                Toastify({
                  text: "Category deleted successfully!",
                  duration: 2000,
                  gravity: "top",
                  position: "right",
                  backgroundColor: "#4CAF50",
                }).showToast();
              }
            }
          }

          // TOGGLE STATUS (BLOCK/UNBLOCK)
          if (e.target.classList.contains("toggleBtn")) {
            const current = e.target.dataset.active === "true";
            const res = await fetch(`/admin/category/${id}`, {
              method: "PATCH",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify({ is_active: !current }),
            });
            const result = await res.json();

            if (result.success) {
              const newStatus = !current ? "Active" : "Inactive";
              const statusElement = tr.querySelector(".cat-status");
              statusElement.textContent = newStatus;
              statusElement.classList.toggle("alert-success", !current);
              statusElement.classList.toggle("alert-danger", current);
              e.target.textContent = !current ? "Block" : "Unblock";
              e.target.dataset.active = (!current).toString();

              e.target.classList.toggle("btnBlock", !current);
              e.target.classList.toggle("btnUnblock", current);

              Toastify({
                text: !current ? "Category blocked!" : "Category unblocked!",
                duration: 2000,
                gravity: "top",
                position: "right",
                backgroundColor: "#4CAF50",
              }).showToast();
            }
          }

          // EDIT CATEGORY
          if (e.target.classList.contains("editBtn")) {
            const categoryId = tr.dataset.id;
            const categoryName = tr.dataset.name;
            const description = tr.dataset.desc;

            // Populate form with category data
            document.getElementById('category-id').value = categoryId;
            document.getElementById('category_name').value = categoryName;
            document.getElementById('description').value = description;
            
            // Update button labels
            document.getElementById('submitBtn').textContent = 'Update category';
            document.getElementById('cancelBtn').style.display = 'block';
            
            // Scroll to form
            document.getElementById('categoryForm').scrollIntoView({ behavior: 'smooth' });
          }
        });
      });
    </script>
  </body>
</html>